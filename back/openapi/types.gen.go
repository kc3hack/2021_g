// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package openapi

import (
	"time"
)

const (
	AuthorizationScopes = "Authorization.Scopes"
)

// Base64 defines model for Base64.
type Base64 []byte

// Box defines model for Box.
type Box struct {
	CreatedAt Datetime `json:"created_at"`
	Id        Id       `json:"id"`

	// base64 encoded characters
	Image     Base64   `json:"image"`
	ItemCount Count    `json:"item_count"`
	Memo      Memo     `json:"memo"`
	Name      BoxName  `json:"name"`
	UpdatedAt Datetime `json:"updated_at"`
}

// BoxName defines model for BoxName.
type BoxName string

// Count defines model for Count.
type Count int

// Datetime defines model for Datetime.
type Datetime time.Time

// Id defines model for Id.
type Id uint64

// Item defines model for Item.
type Item struct {
	CreatedAt Datetime `json:"created_at"`
	Id        Id       `json:"id"`

	// base64 encoded characters
	Image     Base64   `json:"image"`
	Memo      Memo     `json:"memo"`
	Name      ItemName `json:"name"`
	UpdatedAt Datetime `json:"updated_at"`
}

// ItemName defines model for ItemName.
type ItemName string

// Memo defines model for Memo.
type Memo string

// QRPaperSize defines model for QRPaperSize.
type QRPaperSize string

// List of QRPaperSize
const (
	QRPaperSize_a4 QRPaperSize = "a4"
	QRPaperSize_b5 QRPaperSize = "b5"
)

// QRPlacementType defines model for QRPlacementType.
type QRPlacementType string

// List of QRPlacementType
const (
	QRPlacementType_type1 QRPlacementType = "type1"
	QRPlacementType_type2 QRPlacementType = "type2"
)

// PostBoxesJSONBody defines parameters for PostBoxes.
type PostBoxesJSONBody struct {

	// base64 encoded characters
	Image *Base64 `json:"image,omitempty"`
	Memo  *Memo   `json:"memo,omitempty"`
	Name  BoxName `json:"name"`
}

// PutBoxesBoxIdJSONBody defines parameters for PutBoxesBoxId.
type PutBoxesBoxIdJSONBody struct {

	// base64 encoded characters
	Image *Base64  `json:"image,omitempty"`
	Memo  *Memo    `json:"memo,omitempty"`
	Name  *BoxName `json:"name,omitempty"`
}

// PostBoxesBoxIdItemsJSONBody defines parameters for PostBoxesBoxIdItems.
type PostBoxesBoxIdItemsJSONBody struct {

	// base64 encoded characters
	Image *Base64  `json:"image,omitempty"`
	Memo  *Memo    `json:"memo,omitempty"`
	Name  ItemName `json:"name"`
}

// GetBoxesBoxIdQrParams defines parameters for GetBoxesBoxIdQr.
type GetBoxesBoxIdQrParams struct {
	Size *QRPaperSize     `json:"size,omitempty"`
	Type *QRPlacementType `json:"type,omitempty"`
}

// PutItemsItemIdJSONBody defines parameters for PutItemsItemId.
type PutItemsItemIdJSONBody struct {

	// base64 encoded characters
	Image *Base64   `json:"image,omitempty"`
	Memo  *Memo     `json:"memo,omitempty"`
	Name  *ItemName `json:"name,omitempty"`
}

// PostBoxesJSONRequestBody defines body for PostBoxes for application/json ContentType.
type PostBoxesJSONRequestBody PostBoxesJSONBody

// PutBoxesBoxIdJSONRequestBody defines body for PutBoxesBoxId for application/json ContentType.
type PutBoxesBoxIdJSONRequestBody PutBoxesBoxIdJSONBody

// PostBoxesBoxIdItemsJSONRequestBody defines body for PostBoxesBoxIdItems for application/json ContentType.
type PostBoxesBoxIdItemsJSONRequestBody PostBoxesBoxIdItemsJSONBody

// PutItemsItemIdJSONRequestBody defines body for PutItemsItemId for application/json ContentType.
type PutItemsItemIdJSONRequestBody PutItemsItemIdJSONBody

